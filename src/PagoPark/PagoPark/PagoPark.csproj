<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net8.0-android;net8.0-ios;net8.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net8.0-tizen</TargetFrameworks> -->

		<!-- Note for MacCatalyst:
The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
		<!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

		<OutputType>Exe</OutputType>
		<RootNamespace>PagoPark</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<!-- Display name -->
		<ApplicationTitle>PagoPark</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.randamedialabgroup.pagopark</ApplicationId>

		<!-- Versions -->
		<ApplicationDisplayVersion>2.0</ApplicationDisplayVersion>
		<ApplicationVersion>2</ApplicationVersion>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<!--<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />-->
		<MauiIcon Include="Resources\AppIcon\logo.svg" Color="#D9D8D7" />

		<!-- Splash Screen -->
		<!--<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />-->
		<MauiSplashScreen Include="Resources\Splash\logo.svg" Color="#D9D8D7" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.svg" BaseSize="168,208" />
		<MauiImage Update="Resources\Images\logo_start.svg" BaseSize="300,300" />
		
		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<None Remove="Resources\Images\logo_start.svg" />
		<None Remove="Resources\Splash\logo.svg" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Maui.Controls" Version="$(MauiVersion)" />
		<PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="$(MauiVersion)" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
		<PackageReference Include="CommunityToolkit.Maui" Version="6.1.0" />
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.0.0" />
		<PackageReference Include="LiteDB" Version="5.0.17" />		
		<PackageReference Include="QuestPDF" Version="2023.10.1" />
	</ItemGroup>

	<ItemGroup>
		<Compile Update="Views\Pay\PgAddPay.xaml.cs">
			<DependentUpon>PgAddPay.xaml</DependentUpon>
		</Compile>
		<Compile Update="Views\ManageContracts\PgAddContract.xaml.cs">
			<DependentUpon>PgAddContract.xaml</DependentUpon>
		</Compile>
		<Compile Update="Views\PgManageContracts.xaml.cs">
			<DependentUpon>PgManageContracts.xaml</DependentUpon>
		</Compile>
		<Compile Update="Views\PgSettings.xaml.cs">
			<DependentUpon>PgSettings.xaml</DependentUpon>
		</Compile>
	</ItemGroup>

	<ItemGroup>
		<MauiXaml Update="Views\ManageContracts\PgAddContract.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Views\Pay\PgAddPayForAllWeek.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Views\PgHome.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Views\PgManageUser.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Views\PgManageContracts.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Views\Pay\PgAddPay.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Views\PgPay.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Views\PgSingIn.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Views\PgSettings.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
		<MauiXaml Update="Views\Reports\Reports.xaml">
			<Generator>MSBuild:Compile</Generator>
		</MauiXaml>
	</ItemGroup>

	<ItemGroup>
		<Folder Include="Models\Dto\" />
		<Folder Include="Models\Reports\" />
		<Folder Include="Properties\PublishProfiles\" />
		<Folder Include="Tools\Report\" />
	</ItemGroup>

</Project>
